Core 
-------------------------

o HTTPS

o enabled: { } for Collection 

o can augment cmdargs (object server will define as undefined and then
add in its defaults on top of what instance has configured.

o Schema support 
o JSON parsing of params. 
  - settle arrays ([1, 2, 3] vs a=1&a=2&a=3) 
  - doc 
* remember to do Collection schema and query schema
* remember to do ejson expand of schema
* fix defineExpressRoute
o query schemas in Collections
  - XXX just find()?

o Views and forms 
o _id generators 
o Flesh out api for MongoDBCollections to be like current data api 


o if you send non escaped params in query string server freaks
  [15-04-26|14:03:56]% curl 'localhost:8888/hello?message="Nice "'
  curl: (52) Empty reply from server

o invalid json sent in body fails body parser in non-friendly way
(should be able to get out to client...)
SyntaxError: Unexpected string
    at Object.parse (native)
    at parse (/Users/will/src/github/carbon-io/carbond/node_modules/body-parser/lib/types/json.js:84:17)
    at /Users/will/src/github/carbon-io/carbond/node_modules/body-parser/lib/read.js:102:18
    at IncomingMessage.onEnd (/Users/will/src/github/carbon-io/carbond/node_modules/body-parser/node_modules/raw-body/index.js:149:7)
    at IncomingMessage.g (events.js:180:16)
    at IncomingMessage.EventEmitter.emit (events.js:92:17)
    at _stream_readable.js:920:16
    at process._tickCallback (node.js:415:13)

AC
-------------------------
o Endpoint.sanitizesOutput
o make sure you cant change obj[ownerField]. Could be big hole
o rm dynamic spec stuff from acl
o   - maybe not? what if role:Editor says write false but owner says
write true? Dont want and semantics
o UserCollection (just pretend with system acl field level)
o Errors from sanitize (sort of good for now?)
o impl write portion for obj acl 
o impl full proper sanitize (properties + recursive w no loops) 
o Clean up 'options' in acl (not needed) 
  --
  http://iankent.uk/2014/02/11/globally-handling-options-requests-in-play-framework/
o finish root user impl 
  - have sep header for root auth 
  - maybe what we do is take secret-key and the up to configurer 
  whether they want root-access-key. If they do it's 2-factor 
  potentially (when split config and flag passed). If they 
  don't want to use root-access-key root-secret-key becomes a single 
  value api key?

-- SWAGGER

o Swagger Issues
  - in swagger ui if you do an obj get with no id the request url is 
    odd. Think this is swagge bug (http://Wills-MacBook-Pro.local:8888/zipcodes/{id})
  - What's up with swagger and :id? vs :id
  - ObjectIds in swagger coming out wrong -- probably toString of ObjectId  
o Swagger ui and auth 
  - Need to add the api key header name in CORS headers for swagger 
  - root auth
  header to work for key 
  - drive client auth from this (if possible) 
    https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#securityDefinitionsObject


-- DOC
o document logging in ObjectServer
o document in atom how to pass constructor args, how they chain and _init 
o sslOptions

-- MED
o leafnode async
o fibrous
o property cmdArgs non boolean (name value) 
o add dbUri and dbUris cmdArgs 
o remember changing schema of acls that will be in people's data is hard....
o Deal with encryption in authenticators
o UserOwnedMDBCollection
o Auth / AC per endpoint? Telemetry example is a good one
o envelope format / _links
o we took initDBs out of init. Hels with help. Is this ok? Composite 
object servers?
o Responds with stuff in swagger spec (for errors etc...) 
o client 
o Make sure you cant, as a client, use HTTP Method foo and end up
calling endpoint.foo (security)
o Clean up response codes (201 for posts?) 
  http://blog.ploeh.dk/2013/04/30/rest-lesson-learned-avoid-204-responses/
o 201 location: on insert?
o 405 Method Not Allowed
  - not sure we can do this since there is no route registered with
  express if no method. 
o MongoDBDatabase endpoint
  - I think we should be able to re-use MongoDBCollections even if we
  are lazy to create them, but might choose to impl not lazy collction creation?
o decide on /lib/ shorcut in maker
o what is difference between PUT and PATCH?
o CORS security review
  - http://docs.strongloop.com/display/public/LB/Security+considerations
o errors (error middleware?)
   - https://www.joyent.com/developers/node/design/errors
o verify X-Powered-By is not express and make Carbon  

-- LATER
o LRU cache endpoint based on a field
o How does one make /bin wrappers. shebang or bsh?
o socket.io
o shell
o client cmdline
o CREATE method

PUNTED?
o start/stpo at cmdline? NO THIS SHOULD BE MANAGED BY PROCESS MANAGER
o indexes. maybe allow def on OS and have flags for auto-create vs
having to run command vs nothing


--------

> a = { get foo() { return 7 }}
{ foo: [Getter] }
> a
{ foo: [Getter] }
> a.foo
7
http://stackoverflow.com/questions/14047809/js-defineproperty-and-prototype


------ main booty
https://www.npmjs.com/package/lone (eh seems complex)
http://stackoverflow.com/questions/9449485/node-js-native-module-third-party-main-not-working (gyp)
   https://github.com/joyent/node/blob/master/node.gyp
http://qnalist.com/questions/5517523/tutorial-one-hackish-way-to-compile-js-and-native-addons-into-nodejs

--------------------
Creating users: how do we control the object created and how do we
control DOS?
   - just make it artificially slow? 
   - ip throttling? (Good for DOS but not DDOS)
   - Schema on post / insert good enough?
     - WAIT -- maybe use default acl template to define what fields
     they can write to... that is clean
       -- and then maybe for User collections you forbit the client
       from inserting a doc with an acl
     - adding custom fields? -- override insert and call
     this._super('insert')(newO)
     - or insertXform: function(obj) { ... } // maybe I both like and
     say why is this needed if you can _super?
   - How do you get a new user id? Just do ObjectId or let user
     - create involved? i think so even if there is no CREATE HTTP
     verb -- still who calls create, client or insert... hmmmm
     complicated more I think about it
   select? Offer other sequence generators? This generic for all
   collections? OS must make _id -- should also allow to be supplied
  

Example default user acl:

{ 
  aclTemplate: {
    "*": { 
       read: {
         _id: true,
         username: true,
         '*': false
       },
       write: false
    },
    "user:@req.user._id": { // which came from create(). Maybe better
                          // or should it just be <owner>?
    "__owner__": { // which came from create(). Maybe better

       read: {
          "secretField": false
          "*": true // needed since otherwise no field mention is false
       },
       write: {
         username: true, 
         password: true,
         email: true,
         "*": false // would be implied if absent
       } 
     
     }
   }
}

Do we want to make calling create() a formal part of the process?

Should this be the default of create() (or the wrapper to create):

create: function() {
  var result = {
    _id: this.generateId(),
  }

  result.__acl__ = newAcl(result) // so that the generator has the
                                  // user _id and whatever else is needed in the template
}

But you can write:

create: function(req) { // want req? ideally no. maybe create(user)?
   return {
      _id: this.generateId() // should this be in wrapper too?
      password: "passwordchangeme",
      organization: this.
   }
}

Another idea is have req.user be { _id: <id>, __acl__: <acl> } on the
request at right times (like when using User collection)


-----

Blogger

http://webcache.googleusercontent.com/search?q=cache:vlJ_IH4ZBP4J:npmawesome.com/posts/2014-04-29-compare-express-restify-hapi-loopback/+&cd=8&hl=en&ct=clnk&gl=us
-----

ClassDOjo?
http://caines.ca/blog/2013/04/29/so-i-wrote-a-json-api-framework-and-the-framework-was-the-least-interesting-part/

----------
Could this be easier?

__(function() {
  module.exports = o({
    _type: carbon.carbond.ObjectServer
    port: 8888,
    dbUri: "mongodb://will:will@ds049150.mongolab.com:49150/datanode-sandbox",
    endpoints : {
      "zipcodes": o({
        _type: carbon.carbond.MongoDBCollection
        collection: "zipcodes"
      })
    }
  })
})

----------
o Errors 
  - http://dailyjs.com/2014/01/30/exception-error/
----------
o JSON schema
  - http://spacetelescope.github.io/understanding-json-schema/index.html

----------
setuid
  - https://thomashunter.name/blog/drop-root-privileges-in-node-js/
  - http://syskall.com/dont-run-node-dot-js-as-root/ (dont do this)

ssl
http://www.gettingcirrius.com/2012/06/securing-nodejs-and-express-with-ssl.html
